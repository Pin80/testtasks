“Напишите программу, которая переводит числа в их строковое представление.
Например, 123 переводится в "сто двадцать три".
Подумайте, и заложите в архитектуру решения возможность локализации на другие языки.”

// Для корректного преобразования на любом языке
// (учитывая любую грамматику языка)
// решение задачи предполагает реализацию
// контекстно-зависимой граматики, и конвертация происходит
// в три прохода. На первом этапе вычисляются составляющие числа.
// На втором этапе определяется контекст декодирования.
// Для удобства локализации, чтобы формулы в виде программного кода
// не использовать можно использовать бибилиотеку вычислимых текстовых
// математических выражений типа:
// http://www.partow.net/programming/exprtk/index.html
// Тогда хидеры локалей lacale_*.h вообще могут не содержать код функций.
// Также могут использоваться таблицы подстановки (что громоздко)
// На третьем этапе происходит собственно декодирование.
// Неизменная часть программы converter.h взаимодействует с
// изменяемой частью locale_*.h через набор статических интерфейсов
// (реализация CRTP) в файле base_type.h
// Данная программа не годиться для языков с чтением справа на лево,
// А также я не тестировал на языках, где не десятичная система счисления?
// хотя такая возможность заложена.

// Для локализации в файле locale_*.h должны быть определены следующие сущности:
// Словари элементов чисел
// Словари постфиксов (при небольшой доработки можно добавить и префиксы)
// Диапазоны
// Глобальные правила
// Таблица соответствия типов
